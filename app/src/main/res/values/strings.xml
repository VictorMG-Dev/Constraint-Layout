<resources>
    <string name="app_name">Constraint Layout</string>
    <string name="botaoMover">package com.example.a4ld;\n\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.util.DisplayMetrics;\nimport android.view.View;\nimport android.view.animation.Animation;\nimport android.view.animation.TranslateAnimation;\nimport android.widget.Button;\nimport android.widget.LinearLayout;\n\nimport java.util.Random;\n\n   public class MainActivity extends AppCompatActivity {\n\n         @Override\n         protected void onCreate(Bundle savedInstanceState) {\n             super.onCreate(savedInstanceState);\n             setContentView(R.layout.activity_main);\n\n             //get display size.\n             DisplayMetrics displayMetrics = new DisplayMetrics();\n             getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);\n             final int height = displayMetrics.heightPixels;\n             final int width = displayMetrics.widthPixels;\n\n             //generates random values within display size range.\n             //doesn\'t work as intended. the button still goes out of bounds sometimes.\n             Random n = new Random();\n             final int height01 = n.nextInt(height - 0) + 0;\n             Random m = new Random();\n             final int width01 = m.nextInt(width - 0) + 0;\n\n             final Button button01 = (Button) findViewById(R.id.button01);\n\n             button01.setOnClickListener(new View.OnClickListener() {\n\n                 @Override\n                 public void onClick(View v) {\n                    //animates button movement.\n                    TranslateAnimation animation01 = new TranslateAnimation(0, width01, 0, height01);\n                    animation01.setDuration(500);\n                    animation01.setAnimationListener(new animationListener());\n                    button01.startAnimation(animation01);\n                 }\n\n                 class animationListener implements Animation.AnimationListener {\n                      @Override\n                      public void onAnimationStart(Animation animation) {\n                      }\n                      @Override\n                      public void onAnimationEnd(Animation animation) {\n                    //moves the view(probably) to match the new button position.\n                            LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(button01.getWidth(), button01.getHeight());\n                            layoutParams.setMargins(width01, height01, 0, 0);\n                            button01.setLayoutParams(layoutParams);\n                     }\n                     @Override\n                     public void onAnimationRepeat(Animation animation) {\n                     }\n                 }\n            });\n        }\n    }</string>
</resources>